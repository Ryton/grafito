;; Just run this with:
;; arturo sample.art
;;
;; This will create a local sample.db
;; along with the corresponding dot file
;; and its visualization as sample.png 
;; - provided GraphViz is installed
;;
;; Have fun!

do {grafito.art} 

do [
    ;---------------------------------------------
    ; Set up a new graph environment
    ; with a local database named "sample1"
    ;---------------------------------------------
     graph .helpers: [person toys]
    ;---------------------------------------------
    ; a helper creates two aliasses: 
    ;		<field>.new for put '<field>
    ;		<field> for fetch '<field>

    ;---------------------------------------------

          .create
          .palette: 'default
	"sample1"
    [
        unless dbExists? [
            ;---------------------------------------------
            ; Populate the database
            ;---------------------------------------------

		john: person.new [s: "John" sex: 'm] 
		joan: person.new [s: "Joan" sex: 'f] 
		bob:  person.new [s: "Bob"  sex: 'm] 
		jill: person.new [s: "Jill" sex: 'f] 

		doll: toys.new [s: "puppet" ] 
		ball: toys.new [s: "football"] 
            ;---------------------------------------------
            ; Define the relationships
            ; between our nodes
            ;---------------------------------------------
		[bob jill] ~> 'childOf [john joan]

		john <~> 'marriedTo joan
		; <~>  is a  reciprocal link
		;	joan ~> 'marriedTo john 
		; 		and
		;	john ~> 'marriedTo joan
		
		; A <~> 'with B
		; is equivalent to 
		; reciprocalLink A 'with B equivalent to 


		[doll] ~> 'FavouriteToyOf [jill]  
		; A ~> 'with B 
		; is equivalent to 
		; link A 'with B 

		[bob] <~ 'FavouriteToyOf [ball]  
		; A <~ 'with B
		; is equivalent to 
		; reverseLink A 'with B
		; is equivalent to 
		; link  B 'with A


	] 


        ;---------------------------------------------
        ; Fetch every "person" &
        ; open the Desktop app for visualization
        ;---------------------------------------------
  
 		preview fetch 'person ø
 		; equivalent to 
		; preview person ø
		; preview fetch 'person ø
 		
 	]
 ]

; execute ~"dot -Tpng sample.dot -o sample.png"
